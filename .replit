modules = ["nodejs-20", "web", "python-3.11"]
[agent]
expertMode = true

[nix]
channel = "stable-25_05"
packages = ["c-ares", "cacert", "freetype", "glibcLocales", "grpc", "lcms2", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "openssl", "pkg-config", "tcl", "tk", "zlib"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend"

[[workflows.workflow]]
name = "Frontend"
author = "agent"

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Backend"
author = "agent"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python plant_diagnosis_api.py"
waitForPort = 8000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 41827
externalPort = 3000

[deployment]
deploymentTarget = "autoscale"
run = ["gunicorn", "-w", "2", "-k", "gthread", "-b", "0.0.0.0:5000", "backend.plant_diagnosis_api:app"]
build = ["npm", "ci", "--omit=dev", "&&", "npm", "run", "build", "&&", "pip", "install", "-r", "requirements.txt"]
